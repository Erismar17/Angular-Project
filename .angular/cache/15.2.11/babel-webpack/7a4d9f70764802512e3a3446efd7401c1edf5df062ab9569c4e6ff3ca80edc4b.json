{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ModalSwitchService {\n  constructor() {\n    this.modalState = new BehaviorSubject(false);\n  }\n  updateModalState(newState) {\n    this.modalState.next(newState);\n  }\n  getModalState() {\n    return this.modalState.asObservable();\n  }\n  static #_ = this.ɵfac = function ModalSwitchService_Factory(t) {\n    return new (t || ModalSwitchService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalSwitchService,\n    factory: ModalSwitchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,kBAAkB;EAH/BC;IAIU,eAAU,GAAG,IAAIF,eAAe,CAAU,KAAK,CAAC;;EAExDG,gBAAgB,CAACC,QAAiB;IAChC,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,QAAQ,CAAC;EAChC;EAEAG,aAAa;IACX,OAAO,IAAI,CAACF,UAAU,CAACG,YAAY,EAAE;EACvC;EAAC;qBATUP,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAQ,SAAlBR,kBAAkB;IAAAS,YAFjB;EAAM","names":["BehaviorSubject","ModalSwitchService","constructor","updateModalState","newState","modalState","next","getModalState","asObservable","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\erismar.mendoza\\Desktop\\Angular-Project\\src\\app\\services\\modalService\\modal-switch.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalSwitchService {\r\n  private modalState = new BehaviorSubject<boolean>(false);\r\n\r\n  updateModalState(newState: boolean): void {\r\n    this.modalState.next(newState);\r\n  }\r\n\r\n  getModalState(): Observable<boolean> {\r\n    return this.modalState.asObservable();\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}